{"version":3,"sources":["components/AddFriend.js","components/AllFriends.js","components/FindFriend.js","components/Home.js","components/App.js","index.js"],"names":["ALL_FRIENDS","gql","ADD_FRIEND","UPDATE_FRIEND","AddFriend","initialFriend","allowEdit","EMPTY_FRIEND","firstName","lastName","gender","age","email","newFriend","useState","friend","setFriend","useMutation","update","cache","data","createFriend","getFriends","readQuery","query","push","writeQuery","updateFriend","index","findIndex","id","handleChange","event","target","value","onSubmit","preventDefault","input","Number","variables","type","readOnly","onChange","disabled","DELETE_FRIEND","All","useQuery","pollInterval","loading","error","refetch","deleteFriend","JSON","stringify","map","f","key","href","onClick","newFriends","filter","GET_FRIEND","FindFriend","setId","setAllowEdit","useLazyQuery","getFriend","e","length","Home","client","ApolloClient","uri","App","className","exact","activeClassName","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de05c74d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nconst ALL_FRIENDS = gql`\r\n  {\r\n    getFriends {\r\n      id\r\n      firstName\r\n      lastName\r\n      gender\r\n      age\r\n    }\r\n  }\r\n`;\r\nconst ADD_FRIEND = gql`\r\n  mutation createFriend($input: FriendInput!) {\r\n    createFriend(input: $input) {\r\n      id\r\n      firstName\r\n      lastName\r\n      gender\r\n      age\r\n    }\r\n  }\r\n`;\r\nconst UPDATE_FRIEND = gql`\r\n  mutation updateFriend($input: FriendInput!) {\r\n    updateFriend(input: $input) {\r\n      id\r\n      firstName\r\n      lastName\r\n      gender\r\n      age\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddFriend = ({ initialFriend, allowEdit }) => {\r\n  const EMPTY_FRIEND = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    gender: \"OTHER\",\r\n    age: \"\",\r\n    email: \"\",\r\n  };\r\n  let newFriend = initialFriend ? initialFriend : { ...EMPTY_FRIEND };\r\n\r\n  const [friend, setFriend] = useState({ ...newFriend });\r\n\r\n  const [createFriend, { data }] = useMutation(ADD_FRIEND, {\r\n    update(cache, { data }) {\r\n      const newFriend = data.createFriend;\r\n      const { getFriends } = cache.readQuery({ query: ALL_FRIENDS });\r\n      getFriends.push(newFriend);\r\n      cache.writeQuery({\r\n        query: ALL_FRIENDS,\r\n        data: { getFriends: [...getFriends] },\r\n      });\r\n    },\r\n  });\r\n\r\n  const [updateFriend] = useMutation(UPDATE_FRIEND, {\r\n    update(cache, { data }) {\r\n      const newFriend = data.updateFriend;\r\n      const { getFriends } = cache.readQuery({ query: ALL_FRIENDS });\r\n      const index = getFriends.findIndex((friend) => friend.id == newFriend.id);\r\n      getFriends[index] = newFriend;\r\n      cache.writeQuery({\r\n        query: ALL_FRIENDS,\r\n        data: { getFriends: [...getFriends] },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const id = event.target.id;\r\n    friend[id] = event.target.value;\r\n    setFriend({ ...friend });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const input = {\r\n      id: friend.id,\r\n      firstName: friend.firstName,\r\n      lastName: friend.lastName,\r\n      email: friend.email,\r\n      age: Number(friend.age),\r\n      gender: friend.gender,\r\n    };\r\n    if (!initialFriend) {\r\n      createFriend({\r\n        variables: { input },\r\n      });\r\n    } else {\r\n      updateFriend({\r\n        variables: { input },\r\n      });\r\n    }\r\n    setFriend({ ...EMPTY_FRIEND });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        FirstName\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          readOnly={!allowEdit}\r\n          id=\"firstName\"\r\n          value={friend.firstName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        LastName <br />\r\n        <input\r\n          readOnly={!allowEdit}\r\n          type=\"text\"\r\n          id=\"lastName\"\r\n          value={friend.lastName}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Gender &nbsp;\r\n        <select\r\n          disabled={!allowEdit}\r\n          id=\"gender\"\r\n          value={friend.gender}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"MALE\">Male</option>\r\n          <option value=\"FEMALE\">Female</option>\r\n          <option value=\"OTHER\">Other</option>\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Age <br />\r\n        <input\r\n          readOnly={!allowEdit}\r\n          type=\"number\"\r\n          id=\"age\"\r\n          value={friend.age}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <br />\r\n      {allowEdit && <input type=\"submit\" value=\"Submit\" />}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddFriend;\r\n","import React from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nconst ALL_FRIENDS = gql`\r\n  {\r\n    getFriends {\r\n      id\r\n      firstName\r\n      lastName\r\n      language\r\n      gender\r\n      age\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_FRIEND = gql`\r\n  mutation deleteFriend($id: ID!) {\r\n    deleteFriend(id: $id)\r\n  }\r\n`;\r\n\r\nexport default function All() {\r\n  const { loading, error, data, refetch } = useQuery(ALL_FRIENDS, { pollInterval: 10000 });\r\n  //const { loading, error, data, networkStatus } = useQuery(ALL_FRIENDS, { fetchPolicy: \"no-cache\" });\r\n  //const { loading, error, data } = useQuery(ALL_FRIENDS, { pollInterval: 15000 });\r\n\r\n  const [deleteFriend] = useMutation(DELETE_FRIEND);\r\n  const onDeleteFullRefetch = id => {\r\n    deleteFriend({ variables: { id: id } });\r\n    refetch();\r\n  };\r\n\r\n  const onDeleteUpdateCache = id => {\r\n    deleteFriend({\r\n      variables: { id },\r\n      update(cache) {\r\n        const { getFriends } = cache.readQuery({ query: ALL_FRIENDS });\r\n        const newFriends = getFriends.filter(f => f.id !== id);\r\n        cache.writeQuery({\r\n          query: ALL_FRIENDS,\r\n          data: { getFriends: newFriends }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <h3>Loading...</h3>;\r\n  }\r\n  if (error) return <p> {JSON.stringify(error)}</p>;\r\n  if (!data) {\r\n    return <p>No Data</p>;\r\n  }\r\n  return data.getFriends.map(f => {\r\n    const age = f.age ? `, Age: ${f.age}` : null;\r\n    return (\r\n      <p key={f.id}>\r\n        {f.id}, {f.firstName} {f.lastName}, {f.gender}, {f.email} {age}\r\n        &nbsp;\r\n        <a href=\"#\" onClick={() => onDeleteFullRefetch(f.id)}>\r\n          Delete (Refetch All)\r\n        </a>\r\n        , &nbsp;\r\n        <a href=\"#\" onClick={() => onDeleteUpdateCache(f.id)}>\r\n          Delete (Update Cache)\r\n        </a>\r\n      </p>\r\n    );\r\n  });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport AddFriend from \"./AddFriend\";\r\n\r\nconst GET_FRIEND = gql`\r\n  query getFriend($id: ID!) {\r\n    getFriend(id: $id) {\r\n      id\r\n      firstName\r\n      lastName\r\n      language\r\n      gender\r\n      age\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function FindFriend() {\r\n  const [id, setId] = useState(\"\");\r\n  const [allowEdit, setAllowEdit] = useState(false);\r\n  const [getFriend, { loading, error, data }] = useLazyQuery(GET_FRIEND);\r\n\r\n  const fetchFriend = () => {\r\n    if (id === \"\" || id.length !== 24) {\r\n      return;\r\n    }\r\n    getFriend({ variables: { id } });\r\n    setAllowEdit(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      ID:\r\n      <input\r\n        type=\"txt\"\r\n        value={id}\r\n        onChange={(e) => {\r\n          setId(e.target.value);\r\n        }}\r\n      />\r\n      &nbsp; <button onClick={fetchFriend}>Find Friend</button>\r\n      <br />\r\n      <br />\r\n      {loading && <h2>Loading...</h2>}\r\n      {error && <h2>Error while fetching friend...</h2>}\r\n      {data && (\r\n        <div>\r\n          <AddFriend initialFriend={data.getFriend} allowEdit={allowEdit} />\r\n          <button onClick={() => setAllowEdit(!allowEdit)}>\r\n            Toggle Editing\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <h2>GraphQL/Apollo demo</h2>\r\n      <p>This is meant as a simple client demo, using the GraphQL API provided by the Lynda Friends Video</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\n\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport AddFriend from \"./AddFriend\";\r\nimport AllFriends from \"./AllFriends\";\r\nimport FindFriend from \"./FindFriend\";\r\nimport Home from \"./Home\";\r\n\r\nconst URI = \"https://graphqldemo.helvedesmaskine.dk/graphql\";\r\n//const URI = \"http://localhost:5555/graphql\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: URI,\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ul className=\"header\">\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/allFriends\">\r\n              All Friends\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/findFriend\">\r\n              Find Friend\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink exact activeClassName=\"selected\" to=\"/addFriend\">\r\n              Add Friend\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <hr />\r\n        <ApolloProvider client={client}>\r\n          <div className=\"content\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/allFriends\">\r\n                <AllFriends />\r\n              </Route>\r\n              <Route path=\"/findFriend\">\r\n                <FindFriend />\r\n              </Route>\r\n              <Route path=\"/addFriend\">\r\n                <AddFriend allowEdit={true} />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </ApolloProvider>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}